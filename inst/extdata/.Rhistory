meta_df_TB_Status = meta_df[,c(1,9)]
meta_df_TB_Status$Composite_TB_Designation = ifelse(meta_df_TB_Status$Composite_TB_Designation %in% "Y", 1,0)
HLA_LA_Output = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/Concatinated_File_bestguess_G.txt", header=TRUE)
HLA_LA_Output = merge(meta_df_TB_Status, HLA_LA_Output, by = "SampleID", all = FALSE)
HLA_Output_GenDX = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/10March2021_GenDx_HLA_Alleles_Mtb_KhoeSan.txt", header=TRUE)
HLA_Output_GenDX = merge(meta_df_TB_Status, HLA_Output_GenDX, by = "SampleID", all = FALSE)
View(HLA_LA_Output)
HLA_Output_GenDX_A1 = HLA_Output_GenDX[which(HLA_Output_GenDX$Allele_N == 1),]
HLA_Output_GenDX_A1 = cbind(HLA_Output_GenDX_A1[1],  HLA_Output_GenDX_A1[3], HLA_Output_GenDX_A1[10])
colnames(HLA_Output_GenDX_A1)[3] = "Allele_1_DX"
HLA_Output_GenDX_A2 = HLA_Output_GenDX[which(HLA_Output_GenDX$Allele_N == 2),]
HLA_Output_GenDX_A2 = cbind(HLA_Output_GenDX_A2[1], HLA_Output_GenDX_A2[3], HLA_Output_GenDX_A2[10])
colnames(HLA_Output_GenDX_A2)[3] = "Allele_2_DX"
HLA_Output_GenDX_side = merge(HLA_Output_GenDX_A1, HLA_Output_GenDX_A2, by  = c("SampleID", "Locus"), all = FALSE)
HLA_Results_df = merge(HLA_LA_Output_side, HLA_Output_GenDX_side, by  = c("SampleID", "Locus"), all = FALSE)
HLA_Results_df$Allele_1_LA = as.character(HLA_Results_df$Allele_1_LA)
HLA_Results_df$Allele_2_LA = as.character(HLA_Results_df$Allele_2_LA)
HLA_Results_df$Allele_1_DX = as.character(HLA_Results_df$Allele_1_DX)
HLA_Results_df$Allele_2_DX = as.character(HLA_Results_df$Allele_2_DX)
HLA_Results_df$Match_A1 = ifelse(HLA_Results_df$Allele_1_LA == HLA_Results_df$Allele_1_DX | HLA_Results_df$Allele_1_LA == HLA_Results_df$Allele_2_DX, 1,0)
HLA_Results_df$Match_A2 = ifelse(HLA_Results_df$Allele_2_LA == HLA_Results_df$Allele_1_DX | HLA_Results_df$Allele_2_LA == HLA_Results_df$Allele_2_DX, 1,0)
HLA_Results_df$Count_Correct = rowSums(HLA_Results_df[8:9])
meta_df =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/NCTB_TB_status_x_UID_R_formatted.txt", header=TRUE)
colnames(meta_df)[1] = "SampleID"
meta_df_TB_Status = meta_df[,c(1,9)]
meta_df_TB_Status$Composite_TB_Designation = ifelse(meta_df_TB_Status$Composite_TB_Designation %in% "Y", 1,0)
HLA_LA_Output = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/Concatinated_File_bestguess_G.txt", header=TRUE)
HLA_LA_Output = merge(meta_df_TB_Status, HLA_LA_Output, by = "SampleID", all = FALSE)
HLA_Output_GenDX = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/10March2021_GenDx_HLA_Alleles_Mtb_KhoeSan.txt", header=TRUE)
HLA_Output_GenDX = merge(meta_df_TB_Status, HLA_Output_GenDX, by = "SampleID", all = FALSE)
HLA_LA_Output_A1 = HLA_LA_Output[which(HLA_LA_Output$Allele_N == 1),]
HLA_LA_Output_A1 = HLA_LA_Output_A1[,c(1:3,7),]
colnames(HLA_LA_Output_A1)[4] = "Allele_1_LA"
HLA_LA_Output_A2 = HLA_LA_Output[which(HLA_LA_Output$Allele_N == 2),]
HLA_LA_Output_A2 = HLA_LA_Output_A2[,c(1,3,7),]
colnames(HLA_LA_Output_A2)[3] = "Allele_2_LA"
HLA_LA_Output_side = merge(HLA_LA_Output_A1, HLA_LA_Output_A2, by  = c("SampleID", "Locus"), all = FALSE)
HLA_Output_GenDX_A1 = HLA_Output_GenDX[which(HLA_Output_GenDX$Allele_N == 1),]
HLA_Output_GenDX_A1 = cbind(HLA_Output_GenDX_A1[1],  HLA_Output_GenDX_A1[3], HLA_Output_GenDX_A1[10])
colnames(HLA_Output_GenDX_A1)[3] = "Allele_1_DX"
HLA_Output_GenDX_A2 = HLA_Output_GenDX[which(HLA_Output_GenDX$Allele_N == 2),]
HLA_Output_GenDX_A2 = cbind(HLA_Output_GenDX_A2[1], HLA_Output_GenDX_A2[3], HLA_Output_GenDX_A2[10])
colnames(HLA_Output_GenDX_A2)[3] = "Allele_2_DX"
HLA_Output_GenDX_side = merge(HLA_Output_GenDX_A1, HLA_Output_GenDX_A2, by  = c("SampleID", "Locus"), all = FALSE)
HLA_Results_df = merge(HLA_LA_Output_side, HLA_Output_GenDX_side, by  = c("SampleID", "Locus"), all = FALSE)
HLA_Results_df$Allele_1_LA = as.character(HLA_Results_df$Allele_1_LA)
HLA_Results_df$Allele_2_LA = as.character(HLA_Results_df$Allele_2_LA)
HLA_Results_df$Allele_1_DX = as.character(HLA_Results_df$Allele_1_DX)
HLA_Results_df$Allele_2_DX = as.character(HLA_Results_df$Allele_2_DX)
HLA_Results_df$Match_A1 = ifelse(HLA_Results_df$Allele_1_LA == HLA_Results_df$Allele_1_DX | HLA_Results_df$Allele_1_LA == HLA_Results_df$Allele_2_DX, 1,0)
HLA_Results_df$Match_A2 = ifelse(HLA_Results_df$Allele_2_LA == HLA_Results_df$Allele_1_DX | HLA_Results_df$Allele_2_LA == HLA_Results_df$Allele_2_DX, 1,0)
HLA_Results_df$Count_Correct = rowSums(HLA_Results_df[8:9])
HLA_Results_df_A = HLA_Results_df[which(HLA_Results_df$Locus %in% "A"),]
HLA_Results_df_B = HLA_Results_df[which(HLA_Results_df$Locus %in% "B"),]
HLA_Results_df_C = HLA_Results_df[which(HLA_Results_df$Locus %in% "C"),]
HLA_Results_df_G = HLA_Results_df[which(HLA_Results_df$Locus %in% "G"),]
HLA_Results_df_DQA1 = HLA_Results_df[which(HLA_Results_df$Locus %in% "DQA1"),]
HLA_Results_df_DQB1 = HLA_Results_df[which(HLA_Results_df$Locus %in% "DQB1"),]
HLA_Results_df_DPB1 = HLA_Results_df[which(HLA_Results_df$Locus %in% "DPB1"),]
HLA_Results_df_DRB1 = HLA_Results_df[which(HLA_Results_df$Locus %in% "DRB1"),]
Gene = c("HLA_A", "HLA_B", "HLA_C",  "HLA_DQA1", "HLA_DQB1", "HLA_DPB1", "HLA_DRB1")
Correct = c(colSums(HLA_Results_df_A[10]) / (2*(nrow(HLA_Results_df_A))), colSums(HLA_Results_df_B[10]) / (2*(nrow(HLA_Results_df_B))),colSums(HLA_Results_df_C[10]) / (2*(nrow(HLA_Results_df_C))),colSums(HLA_Results_df_DQA1[10]) / (2*(nrow(HLA_Results_df_DQA1))), colSums(HLA_Results_df_DQB1[10]) / (2*(nrow(HLA_Results_df_DQB1))), colSums(HLA_Results_df_DPB1[10]) / (2*(nrow(HLA_Results_df_DPB1))), colSums(HLA_Results_df_DRB1[10]) / (2*(nrow(HLA_Results_df_DRB1))))
Allele_Df = data.frame(Gene, Correct)
ggplot(Allele_Df, aes(x=Gene, y=Correct, fill=Gene)) + geom_bar(stat="identity")+theme_classic()
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Figures/11March2021_HLA_LA_GenDC_Comparison.pdf")
ggplot(Allele_Df, aes(x=Gene, y=Correct, fill=Gene)) + geom_bar(stat="identity")+theme_classic()
dev.off()
HLA_LA_Output_side_A = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "A"),]
colnames(HLA_LA_Output_side_A)[4] = "A"
colnames(HLA_LA_Output_side_A)[5] = "A"
HLA_LA_Output_side_B = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "B"),]
colnames(HLA_LA_Output_side_B)[4] = "B"
colnames(HLA_LA_Output_side_B)[5] = "B"
HLA_LA_Output_side_C = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "C"),]
colnames(HLA_LA_Output_side_C)[4] = "C"
colnames(HLA_LA_Output_side_C)[5] = "C"
HLA_LA_Output_side_DQA1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DQA1"),]
colnames(HLA_LA_Output_side_DQA1)[4] = "DQA1"
colnames(HLA_LA_Output_side_DQA1)[5] = "DQA1"
HLA_LA_Output_side_DQB1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DQB1"),]
colnames(HLA_LA_Output_side_DQB1)[4] = "DQB1"
colnames(HLA_LA_Output_side_DQB1)[5] = "DQB1"
HLA_LA_Output_side_DPB1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DPB1"),]
colnames(HLA_LA_Output_side_DPB1)[4] = "DPB1"
colnames(HLA_LA_Output_side_DPB1)[5] = "DPB1"
HLA_LA_Output_side_DRB1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DRB1"),]
colnames(HLA_LA_Output_side_DRB1)[4] = "DRB1"
colnames(HLA_LA_Output_side_DRB1)[5] = "DRB1"
BIGDAWG_HLA_LA = cbind(HLA_LA_Output_side_A[1], HLA_LA_Output_side_A[3], HLA_LA_Output_side_A[4], HLA_LA_Output_side_A[5], HLA_LA_Output_side_B[4], HLA_LA_Output_side_B[5], HLA_LA_Output_side_C[4], HLA_LA_Output_side_C[5], HLA_LA_Output_side_DQA1[4], HLA_LA_Output_side_DQA1[5], HLA_LA_Output_side_DQB1[4], HLA_LA_Output_side_DQB1[5], HLA_LA_Output_side_DPB1[4], HLA_LA_Output_side_DPB1[5], HLA_LA_Output_side_DRB1[4], HLA_LA_Output_side_DRB1[5])
colnames(BIGDAWG_HLA_LA)[2] = "Disease"
View(Allele_Df)
HLA_LA_Output_side_A = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "A"),]
colnames(HLA_LA_Output_side_A)[4] = "A"
colnames(HLA_LA_Output_side_A)[5] = "A"
HLA_LA_Output_side_B = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "B"),]
colnames(HLA_LA_Output_side_B)[4] = "B"
colnames(HLA_LA_Output_side_B)[5] = "B"
HLA_LA_Output_side_C = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "C"),]
colnames(HLA_LA_Output_side_C)[4] = "C"
colnames(HLA_LA_Output_side_C)[5] = "C"
HLA_LA_Output_side_DQA1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DQA1"),]
colnames(HLA_LA_Output_side_DQA1)[4] = "DQA1"
colnames(HLA_LA_Output_side_DQA1)[5] = "DQA1"
HLA_LA_Output_side_DQB1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DQB1"),]
colnames(HLA_LA_Output_side_DQB1)[4] = "DQB1"
colnames(HLA_LA_Output_side_DQB1)[5] = "DQB1"
HLA_LA_Output_side_DPB1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DPB1"),]
colnames(HLA_LA_Output_side_DPB1)[4] = "DPB1"
colnames(HLA_LA_Output_side_DPB1)[5] = "DPB1"
HLA_LA_Output_side_DRB1 = HLA_LA_Output_side[which(HLA_LA_Output_side$Locus %in% "DRB1"),]
colnames(HLA_LA_Output_side_DRB1)[4] = "DRB1"
colnames(HLA_LA_Output_side_DRB1)[5] = "DRB1"
BIGDAWG_HLA_LA = cbind(HLA_LA_Output_side_A[1], HLA_LA_Output_side_A[3], HLA_LA_Output_side_A[4], HLA_LA_Output_side_A[5], HLA_LA_Output_side_B[4], HLA_LA_Output_side_B[5], HLA_LA_Output_side_C[4], HLA_LA_Output_side_C[5], HLA_LA_Output_side_DQA1[4], HLA_LA_Output_side_DQA1[5], HLA_LA_Output_side_DQB1[4], HLA_LA_Output_side_DQB1[5], HLA_LA_Output_side_DPB1[4], HLA_LA_Output_side_DPB1[5], HLA_LA_Output_side_DRB1[4], HLA_LA_Output_side_DRB1[5])
colnames(BIGDAWG_HLA_LA)[2] = "Disease"
BIGDAWG(Data = BIGDAWG_HLA_LA, HLA = TRUE, Run.Tests = c("L", "HWE"), All.Pairwise=F, Trim=F, Res=2, Missing= "ignore", Cores.Lim=1L,Results.Dir = "/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data", Return=F, Output=T, Verbose=T)
head(HLA_Results_df)
View(HLA_Results_df)
OR_HLA_LA =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/BIGDAWG_Output/HLA_LA_Run1/Locus_OR.txt",header = TRUE)
OR_HLA_LA$Threshold = ifelse(OR_HLA_LA$p.value < 0.05, TRUE, FALSE)
ggplot(OR_HLA_LA, aes(x=OR, y= -log10(p.value), color=Threshold, label = Allele)) + geom_point(size = 4, alpha = 0.8)+theme_classic()+scale_colour_manual(values=c("DeepSkyBlue2","brown2"))+ geom_text()
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Figures/11March2021_HLA_LA_BIGDAWG_Results_Volcano_Plot.pdf")
ggplot(OR_HLA_LA, aes(x=OR, y= -log10(p.value), color=Threshold, label = Allele)) + geom_point(size = 4, alpha = 0.8)+theme_classic()+scale_colour_manual(values=c("DeepSkyBlue2","brown2"))+ geom_text()
dev.off()
ggplot(Allele_Df, aes(x=Gene, y=Correct, fill=Gene)) + geom_bar(stat="identity")+theme_classic()
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Figures/11March2021_HLA_LA_GenDC_Comparison.pdf")
ggplot(Allele_Df, aes(x=Gene, y=Correct, fill=Gene)) + geom_bar(stat="identity")+theme_classic()
dev.off()
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Figures/11March2021_HLA_LA_BIGDAWG_Results_Volcano_Plot.pdf")
ggplot(OR_HLA_LA, aes(x=OR, y= -log10(p.value), color=Threshold, label = Allele)) + geom_point(size = 4, alpha = 0.8)+theme_classic()+scale_colour_manual(values=c("DeepSkyBlue2","brown2"))+ geom_text()
dev.off()
ggplot(OR_HLA_LA, aes(x=OR, y= -log10(p.value), color=Threshold, label = Allele)) + geom_point(size = 4, alpha = 0.8)+theme_classic()+scale_colour_manual(values=c("DeepSkyBlue2","brown2"))+ geom_text()
ggplot(OR_HLA_LA, aes(x=OR, y= -log10(p.value), color=Threshold, label = Allele)) + geom_point(size = 4, alpha = 0.8)+theme_classic()+scale_colour_manual(values=c("DeepSkyBlue2","brown2"))
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Figures/11March2021_HLA_LA_BIGDAWG_Results_Volcano_Plot.pdf")
ggplot(OR_HLA_LA, aes(x=OR, y= -log10(p.value), color=Threshold, label = Allele)) + geom_point(size = 4, alpha = 0.8)+theme_classic()+scale_colour_manual(values=c("DeepSkyBlue2","brown2"))
dev.off()
View(OR_HLA_LA)
head(OR_GenDX)
head(OR_HLA_LA)
OR_GenDX$BH_FDR = p.adjust(OR_GenDX$p.value, method = hochberg, n = length(OR_GenDX))
OR_GenDX$BH_FDR = p.adjust(OR_GenDX$p.value, method = "hochberg", n = length(OR_GenDX))
head*OR_GenDX
head(OR_GenDX)
OR_GenDX =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/S_Africa_HLA_Henn_Collaboration/Mtb_Study/Data/BIGDAWG_Output/GenDX_Run1/Set1/Locus_OR.txt",header = TRUE)
OR_GenDX$BH_FDR = p.adjust(OR_GenDX$p.value, method = "hochberg", n = length(OR_GenDX))
length(OR_GenDX)
dim(OR_GenDX$)
dim(OR_GenDX)
head(OR_GenDX)
OR_GenDX$BH_FDR = p.adjust(OR_GenDX$p.value, method = "hochberg", n = nrow(OR_GenDX))
View(OR_GenDX)
OR_HLA_LA$BH_FDR = p.adjust(OR_HLA_LA$p.value, method = "hochberg", n = nrow(OR_HLA_LA))
View(OR_HLA_LA)
df =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/R_Inputs/14Jan2021_KIR_Allele_Freq_By_Population.txt", header=TRUE)
head(df)
ggplot(df, aes(x=Population, y=Global_Freq, fill=name))+ geom_bar(width = 1, stat = "identity")+theme_classic()+ theme(legend.position = "none")
library(ggplot2)
ggplot(df, aes(x=Population, y=Global_Freq, fill=name))+ geom_bar(width = 1, stat = "identity")+theme_classic()+ theme(legend.position = "none")
df_2 =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/R_Inputs/14Jan2021_KIR_Allele_Freq_By_Population.txt", header=TRUE)
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("brown2","DarkGoldenrod2","DarkOrchid3", "green3", "DodgerBlue3"))+theme_bw()+ theme(legend.position = "none")
df_1 = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/R_Inputs/15Jan2021_KIR_Allele_Counts_InTest_Sets_By_GLobal_W_50_50_Split_Population.txt", header= TRUE)
ggplot(data=df_1, aes(x=X_Axis_Position, y=Percent_Correctly_Imputed)) + geom_bar(stat="identity")+theme_bw()
ggplot(data=df_1, aes(x=X_Axis_Position, y=Percent_Correctly_Imputed)) + geom_bar(stat="identity")scale_colour_manual(values=c("DodgerBlue3"))+theme_bw()
ggplot(data=df_1, aes(x=X_Axis_Position, y=Percent_Correctly_Imputed)) + geom_bar(stat="identity")+scale_fill_manual(values=c("DodgerBlue3"))+theme_bw()
ggplot(data=df_1, aes(x=X_Axis_Position, y=Percent_Correctly_Imputed)) + geom_bar(stat="identity", colour = "DodgerBlue3")+theme_bw()
ggplot(data=df_1, aes(x=X_Axis_Position, y=Percent_Correctly_Imputed)) + geom_bar(stat="identity", fill = "DodgerBlue3")+theme_bw()
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("brown2","DarkGoldenrod2","DarkOrchid3", "green3", "coral"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("brown2","DarkGoldenrod2","DarkOrchid3", "green3", "cyan1"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("brown2","gold1","DarkOrchid3", "green3", "cyan1"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("HotPink","gold1","DarkOrchid3", "green3", "cyan1"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("LightCoral","gold1","DarkOrchid3", "green3", "cyan1"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("maroon2","gold1","magenta2", "green3", "cyan1"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("maroon2","gold1","MediumPurple1", "green3", "cyan1"))+theme_bw()+ theme(legend.position = "none")
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("maroon2","gold1","MediumPurple1", "MediumSpringGreen", "cyan1"))+theme_bw()+ theme(legend.position = "none")
df_1 = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/R_Inputs/15Jan2021_KIR_Allele_Counts_InTest_Sets_By_GLobal_W_50_50_Split_Population.txt", header= TRUE)
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Figures/18March2021_figure3c_BarGraph_KIR_Allele_Imputation_Accuracy_OrderedBy_Freq_By_Super_Population.pdf", height=3, width=9)
ggplot(data=df_1, aes(x=X_Axis_Position, y=Percent_Correctly_Imputed)) + geom_bar(stat="identity", fill = "DodgerBlue3")+theme_bw()
dev.off()
df_2 =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/R_Inputs/14Jan2021_KIR_Allele_Freq_By_Population.txt", header=TRUE)
pdf("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Figures/18March2021_figure3c_ScatterPlot_KIR_Allele_Freq_By_Super_Population.pdf", height=3, width=9)
ggplot(df_2, aes(x=X_Axis_Position_Global, y=Local_Frequency, colour = Population)) + geom_point(size = 4, alpha = 0.8)+scale_colour_manual(values=c("maroon2","gold1","MediumPurple1", "MediumSpringGreen", "cyan1"))+theme_bw()+ theme(legend.position = "none")
dev.off()
HLA_Alleles =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/Han_Chineese_Project/Documents/Manuscript_Submission/Data/R_Inputs/12Nov2020_HLA_C1_Alleles_Global_TKG_UnEdited.txt", header = TRUE, rownames = TRUE)
HLA_Alleles =  read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/Han_Chineese_Project/Documents/Manuscript_Submission/Data/R_Inputs/12Nov2020_HLA_C1_Alleles_Global_TKG_UnEdited.txt", header = TRUE, row.names = TRUE)
df_1 = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/R_Inputs/15Jan2021_KIR_Allele_Counts_InTest_Sets_By_GLobal_W_50_50_Split_Population.txt", header= TRUE, row.names = 1)
View(df_1)
library(KIRpong)
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
install.packages(KIRpong)
install.packages("KIRpong")
library(KIRpongtidyverse)
library(KIRpong)
source("/home/genelle/KIRpong/Scripts/HIBAG-master")
install.packages("HIBAG")
packageurl <- "/home/genelle/KIRpong/Scripts/HIBAG-master"
install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "http://www.bioconductor.org/packages/HIBAG/1.26.0/"
install.packages(packageurl, contriburl=NULL, type="source")
source("http://www.bioconductor.org/packages/HIBAG/")
install.packages("HIBAG")
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
install.packages("KIRpong")
source("/Users/genelleharrison/Dropbox/UC_Denver/Source_Code/KIRpong-master")
install.packages("KIRpong")
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
install.packages("KIRpong")
/Library/Frameworks/R.framework/Versions
fs::dir_tree(path = "/Library/Frameworks/R.framework/Versions", recurse = FALSE)
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
install.packages("KIRpong")
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
source("~/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
library(HIBAG)
source("~/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/HIBAG-master")
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/HIBAG-master")
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/HIBAG-master/")
source("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/HIBAG-master/R")
install.packages("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/HIBAG-master/R/HIBAG")
install.packages("~/Dropbox (Personal)/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/PONG_V1/R/PONG_V1.r", repos = NULL)
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("usethis")
install.packages("usethis")
library(devtools)
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master")
library(KIRpong)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/HIBAG-master.zip")
library(KIRpong)
library(HIBAG)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(KIRpong)
library(KIRpong)
geno =
hlaBED2Geno(bed.fn=" /Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/TGP.v5a.chr19.jan09-2017_Dups_Removed_SNPs_Not_Filtered_Global_50_Percent_of_Ind_Model_Input_KIR_Alleles_MAC_2_Filtered_MEGA_SNPs.bed", fam.fn= " /Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/TGP.v5a.chr19.jan09-2017_Dups_Removed_SNPs_Not_Filtered_Global_50_Percent_of_Ind_Model_Input_KIR_Alleles_MAC_2_Filtered_MEGA_SNPs.fam", bim.fn=" /Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/TGP.v5a.chr19.jan09-2017_Dups_Removed_SNPs_Not_Filtered_Global_50_Percent_of_Ind_Model_Input_KIR_Alleles_MAC_2_Filtered_MEGA_SNPs.bim", assembly="hg19")
.onAttach <- function(lib, pkg)
{
initialize KIRpong
rv <- .C("KIRpong_Init", SSE.Flag=integer(1), PACKAGE="KIRpong")
information
packageStartupMessage(
"KIRpong (HLA Genotype Imputation with Attribute Bagging): v1.2.4")
if (rv$SSE.Flag != 0)
packageStartupMessage("Supported by Streaming SIMD Extensions 2 (SSE2)")
TRUE
}
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(usethis)
library(devtools)
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
install_local("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/KIRpong-master.zip")
library(KIRpong)
geno =
hlaBED2Geno(bed.fn="/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/MEGA_Merged_w_TGP.v5a.chr19.jan09-2017_Dups_Removed_Not_Filtered_EUR_50_Percent_of_Ind_Model_Input_KIR_Alleles_MAC_2_Filtered.bed", fam.fn= "/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/MEGA_Merged_w_TGP.v5a.chr19.jan09-2017_Dups_Removed_Not_Filtered_EUR_50_Percent_of_Ind_Model_Input_KIR_Alleles_MAC_2_Filtered.fam", bim.fn="/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/MEGA_Merged_w_TGP.v5a.chr19.jan09-2017_Dups_Removed_Not_Filtered_EUR_50_Percent_of_Ind_Model_Input_KIR_Alleles_MAC_2_Filtered.bim", assembly="hg19")
D <- read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/PONG_Code_Development/Files_For_Testing_Pipeline/Model_Building_Plink_Files/Global_KIR_Typing_Alleles_For_Model_50_Percent_of_Individuals_TypeAlleles_MAC_2.txt", header=TRUE, stringsAsFactors = FALSE)
head(D)
dim(D)
remove.packages(KIRpong, KIRpong)
remove.packages("KIRpong")
library(rmarkdown)
---
title: "Pong_Pipeline"
author: "Genelle F Harrison"
date: "3/31/2021"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r cars}
summary(cars)
```
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
```
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
getwd()
path = getwd()
path
print(path)"/KIRpong/Scripts/Versions/KIRpong/inst/extdata.bed"
print(path)/KIRpong/Scripts/Versions/KIRpong/inst/extdata.bed
"print(path)/KIRpong/Scripts/Versions/KIRpong/inst/extdata.bed"
print(path), "print(path)/KIRpong/Scripts/Versions/KIRpong/inst/extdata.bed"
knitr::opts_chunk$set(echo = TRUE)
path_inputs=getwd()
path_inputs
paste0(path_inputs)
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
path_inputs
getwd()
getwd()
library(KIRpong)
path_inputs = getwd()
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"), bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
ç
path_inputs = getwd()
path_inputs
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"), bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
path_inputs=getwd()
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"), bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"), bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
geno =
hlaBED2Geno(bed.fn= "/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed", fam.fn= "/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam", "/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim", assembly="hg38")
path_inputs=getwd()
path_inputs
getwd()
geno =
hlaBED2Geno(bed.fn= "/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed", fam.fn= "/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam", "/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim", assembly="hg38")
getwd()
path_inputs=getwd()
path_inputs
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"), bim.fn= paste0(path_inputs,"/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
path_inputs
path_inputs
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"), bim.fn= paste0(path_inputs,"/KIRpong/Scripts/Versions/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
getwd()
path_inputs
geno =
hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
setwd(path_inputs)
path_inputs
paste0(path_inputs)
paste0(path_inputs)
knitr::opts_chunk$set(echo = TRUE)
library(KIRpong)
path_inputs=getwd()
setwd(paste0(path_inputs))
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
paste0(path_inputs)
path_inputs=getwd()
path_inputs
library(KIRpong)
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Model_Input.bim"), assembly="hg38")
D <- read.table(paste0(path_inputs,"/KIRpong/inst/extdata/EUR_KIR_Typing_Alleles_For_Model.txt"), header=TRUE, stringsAsFactors = FALSE)
train.HLA <- hlaAllele(D$SampleID, H1=D$Allele1, H2=D$Allele2, locus="KIR3DLS1", assembly="hg38")
summary(train.HLA)
snpid <- hlaFlankingSNP(geno$snp.id, geno$snp.position, "KIR3DLS1", 10*10, assembly="hg38")
train.geno <- hlaGenoSubset(geno, snp.sel=match(snpid, geno$snp.id))
set.seed(1000)
model <- hlaAttrBagging(train.HLA, train.geno, nclassifier=100, verbose.detail=TRUE)
summary(model)
model.obj <- hlaModelToObj(model)
save(model.obj, file=paste0(path_inputs,"/KIRpong/data/PONG_Test_Models/Tutorial_Model_EUR.RData"))
save(model.obj, file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData"))
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
path_to_file= paste0(path_inputs,"/KIRpong/inst/extdata/Results")
HLA_allele="KIR3DLS1"
setwd(path_to_file)
model.list=get(load(model_file))
hla.id=HLA_allele
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
print(hla.id)
model=hlaModelFromObj(model.list)
pred.guess=predict(model, yourgeno, type="response+prob", match.type = "Position")
pred.guess_value = as.data.frame(pred.guess$value)
pred.guess_postprob = as.data.frame(pred.guess$postprob)
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
path_to_file= paste0(path_inputs,"/KIRpong/inst/extdata/Results")
HLA_allele="KIR3DLS1"
setwd(path_to_file)
model.list=get(load(model_file))
hla.id=HLA_allele
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
print(hla.id)
model=hlaModelFromObj(model.list)
pred.guess=predict(model, yourgeno, type="response+prob", match.type = "Position")
pred.guess_value = as.data.frame(pred.guess$value)
pred.guess_postprob = as.data.frame(pred.guess$postprob)
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
HLA_allele="KIR3DLS1"
model.list=get(load(model_file))
hla.id=HLA_allele
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
names(geno)
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
#setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
#path_inputs=getwd()
HLA_allele="KIR3DLS1"
model.list=get(load(model_file))
hla.id=HLA_allele
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
path_to_file="/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions/KIRpong/inst/extdata"
HLA_allele="KIR3DLS1"
setwd(path_to_file)
getwd()
model.list=get(load(model_file))
hla.id=HLA_allele
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
path_to_file=paste0(path_inputs,"/KIRpong/inst/extdata/Results/Tutorial_Model_EUR.RData")
path_to_file
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
path_to_file=paste0(path_inputs,"/KIRpong/inst/extdata/Results")
setwd("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/Scripts/Versions")
path_inputs=getwd()
geno = hlaBED2Geno(bed.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bed"), fam.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.fam"),bim.fn= paste0(path_inputs,"/KIRpong/inst/extdata/Chr19.hg38_TGP_EUR_Populations_Test_Input.bim"), assembly="hg38")
model_file=paste0(path_inputs,"/KIRpong/data/Tutorial_Model_EUR.RData")
path_to_file=paste0(path_inputs,"/KIRpong/inst/extdata/Results")
HLA_allele="KIR3DLS1"
setwd(path_to_file)
getwd()
model.list=get(load(model_file))
hla.id=HLA_allele
yourgeno=hlaBED2Geno(bed.fn=bed_file, fam.fn=fam_file, bim.fn=bim_file, assembly="hg38")
Known_KIR_Input = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/KIRpong_Test_Data/KIR_Alleles/1000G_KIRlineageIIplus2DL4_3DLS1only_Nulls_Added_MAC_2_Filtered_Fixed.txt", header=TRUE)
colnames(Known_KIR_Input)[3] = "SampleID"
colnames(Known_KIR_Input)[4] = "Allele1"
colnames(Known_KIR_Input)[5] = "Allele2"
head(Known_KIR_Input)
AFR_Results = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/OutPut_data/KIRpong_Output/Global_Sequence2_Pong_Results/AFR_Subset/Global_Model_50_Percent_of_Individuals_Plink_MAC2_KIR_Region_KIR_Types_MAC_2_Filtered_AFR_Subset_Prediction_Alleles_merged.txt", header=TRUE)
AFR_Results = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/KIRpong_Test_Data/OutPut_data/KIRpong_Output/Global_Sequence2_Pong_Results/AFR_Subset/Global_Model_50_Percent_of_Individuals_Plink_MAC2_KIR_Region_KIR_Types_MAC_2_Filtered_AFR_Subset_Prediction_Alleles_merged.txt", header=TRUE)
head(AFR_Results)
AMR_Results = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/KIRpong_Test_Data/OutPut_data/KIRpong_Output/Global_Sequence2_Pong_Results/AMR_Subset/Global_Model_50_Percent_of_Individuals_Plink_MAC2_KIR_Region_KIR_Types_MAC_2_Filtered_AMR_Subset_Prediction_Alleles_merged.txt", header=TRUE)
EAS_Results = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/KIRpong_Test_Data/OutPut_data/KIRpong_Output/Global_Sequence2_Pong_Results/EAS_Subset/Global_Model_50_Percent_of_Individuals_Plink_MAC2_KIR_Region_KIR_Types_MAC_2_Filtered_EAS_Subset_Prediction_Alleles_merged.txt", header=TRUE)
EUR_Results = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/KIRpong_Test_Data/OutPut_data/KIRpong_Output/Global_Sequence2_Pong_Results/EUR_Subset/Global_Model_50_Percent_of_Individuals_Plink_MAC2_KIR_Region_KIR_Types_MAC_2_Filtered_EUR_Subset_Prediction_Alleles_merged.txt", header=TRUE)
SAS_Results = read.table("/Users/genelleharrison/Dropbox/UC_Denver/Projects/KIRpong/KIRpong_Test_Data/OutPut_data/KIRpong_Output/Global_Sequence2_Pong_Results/SAS_Subset/Global_Model_50_Percent_of_Individuals_Plink_MAC2_KIR_Region_KIR_Types_MAC_2_Filtered_SAS_Subset_Prediction_Alleles_merged.txt", header=TRUE)
unique(AFR_Results$Allele1)
